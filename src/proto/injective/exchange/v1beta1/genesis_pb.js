// source: injective/exchange/v1beta1/genesis.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var injective_exchange_v1beta1_exchange_pb = require('../../../injective/exchange/v1beta1/exchange_pb.js');
goog.object.extend(proto, injective_exchange_v1beta1_exchange_pb);
var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
goog.exportSymbol('proto.injective.exchange.v1beta1.Balance', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.DerivativeOrderBook', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.DerivativePosition', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.GenesisState', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.PerpetualMarketFundingState', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.SpotOrderBook', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.SubaccountNonce', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.GenesisState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.GenesisState.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.GenesisState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.GenesisState.displayName = 'proto.injective.exchange.v1beta1.GenesisState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.SpotOrderBook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.SpotOrderBook.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.SpotOrderBook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.SpotOrderBook.displayName = 'proto.injective.exchange.v1beta1.SpotOrderBook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.DerivativeOrderBook.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.DerivativeOrderBook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.DerivativeOrderBook.displayName = 'proto.injective.exchange.v1beta1.DerivativeOrderBook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.Balance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.Balance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.Balance.displayName = 'proto.injective.exchange.v1beta1.Balance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.DerivativePosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.DerivativePosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.DerivativePosition.displayName = 'proto.injective.exchange.v1beta1.DerivativePosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.SubaccountNonce = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.SubaccountNonce, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.SubaccountNonce.displayName = 'proto.injective.exchange.v1beta1.SubaccountNonce';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.displayName = 'proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.PerpetualMarketFundingState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.PerpetualMarketFundingState.displayName = 'proto.injective.exchange.v1beta1.PerpetualMarketFundingState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.displayName = 'proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.GenesisState.repeatedFields_ = [2,3,4,5,6,7,8,9,10,11,12,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.GenesisState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.GenesisState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.GenesisState.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && injective_exchange_v1beta1_exchange_pb.Params.toObject(includeInstance, f),
    spotMarketsList: jspb.Message.toObjectList(msg.getSpotMarketsList(),
    injective_exchange_v1beta1_exchange_pb.SpotMarket.toObject, includeInstance),
    derivativeMarketsList: jspb.Message.toObjectList(msg.getDerivativeMarketsList(),
    injective_exchange_v1beta1_exchange_pb.DerivativeMarket.toObject, includeInstance),
    spotOrderbookList: jspb.Message.toObjectList(msg.getSpotOrderbookList(),
    proto.injective.exchange.v1beta1.SpotOrderBook.toObject, includeInstance),
    derivativeOrderbookList: jspb.Message.toObjectList(msg.getDerivativeOrderbookList(),
    proto.injective.exchange.v1beta1.DerivativeOrderBook.toObject, includeInstance),
    balancesList: jspb.Message.toObjectList(msg.getBalancesList(),
    proto.injective.exchange.v1beta1.Balance.toObject, includeInstance),
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.injective.exchange.v1beta1.DerivativePosition.toObject, includeInstance),
    subaccountTradeNoncesList: jspb.Message.toObjectList(msg.getSubaccountTradeNoncesList(),
    proto.injective.exchange.v1beta1.SubaccountNonce.toObject, includeInstance),
    expiryFuturesMarketInfoStateList: jspb.Message.toObjectList(msg.getExpiryFuturesMarketInfoStateList(),
    proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.toObject, includeInstance),
    perpetualMarketInfoList: jspb.Message.toObjectList(msg.getPerpetualMarketInfoList(),
    injective_exchange_v1beta1_exchange_pb.PerpetualMarketInfo.toObject, includeInstance),
    perpetualMarketFundingStateList: jspb.Message.toObjectList(msg.getPerpetualMarketFundingStateList(),
    proto.injective.exchange.v1beta1.PerpetualMarketFundingState.toObject, includeInstance),
    derivativeMarketSettlementScheduledList: jspb.Message.toObjectList(msg.getDerivativeMarketSettlementScheduledList(),
    injective_exchange_v1beta1_exchange_pb.DerivativeMarketSettlementInfo.toObject, includeInstance),
    isSpotExchangeEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isDerivativesExchangeEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    liquidityMiningAccountPointsList: jspb.Message.toObjectList(msg.getLiquidityMiningAccountPointsList(),
    proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.toObject, includeInstance),
    currentLiquidityMiningCampaign: (f = msg.getCurrentLiquidityMiningCampaign()) && injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign.toObject(includeInstance, f),
    upcomingLiquidityMiningCampaign: (f = msg.getUpcomingLiquidityMiningCampaign()) && injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.GenesisState}
 */
proto.injective.exchange.v1beta1.GenesisState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.GenesisState;
  return proto.injective.exchange.v1beta1.GenesisState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.GenesisState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.GenesisState}
 */
proto.injective.exchange.v1beta1.GenesisState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new injective_exchange_v1beta1_exchange_pb.Params;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.SpotMarket;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.SpotMarket.deserializeBinaryFromReader);
      msg.addSpotMarkets(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeMarket;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeMarket.deserializeBinaryFromReader);
      msg.addDerivativeMarkets(value);
      break;
    case 4:
      var value = new proto.injective.exchange.v1beta1.SpotOrderBook;
      reader.readMessage(value,proto.injective.exchange.v1beta1.SpotOrderBook.deserializeBinaryFromReader);
      msg.addSpotOrderbook(value);
      break;
    case 5:
      var value = new proto.injective.exchange.v1beta1.DerivativeOrderBook;
      reader.readMessage(value,proto.injective.exchange.v1beta1.DerivativeOrderBook.deserializeBinaryFromReader);
      msg.addDerivativeOrderbook(value);
      break;
    case 6:
      var value = new proto.injective.exchange.v1beta1.Balance;
      reader.readMessage(value,proto.injective.exchange.v1beta1.Balance.deserializeBinaryFromReader);
      msg.addBalances(value);
      break;
    case 7:
      var value = new proto.injective.exchange.v1beta1.DerivativePosition;
      reader.readMessage(value,proto.injective.exchange.v1beta1.DerivativePosition.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    case 8:
      var value = new proto.injective.exchange.v1beta1.SubaccountNonce;
      reader.readMessage(value,proto.injective.exchange.v1beta1.SubaccountNonce.deserializeBinaryFromReader);
      msg.addSubaccountTradeNonces(value);
      break;
    case 9:
      var value = new proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState;
      reader.readMessage(value,proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.deserializeBinaryFromReader);
      msg.addExpiryFuturesMarketInfoState(value);
      break;
    case 10:
      var value = new injective_exchange_v1beta1_exchange_pb.PerpetualMarketInfo;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.PerpetualMarketInfo.deserializeBinaryFromReader);
      msg.addPerpetualMarketInfo(value);
      break;
    case 11:
      var value = new proto.injective.exchange.v1beta1.PerpetualMarketFundingState;
      reader.readMessage(value,proto.injective.exchange.v1beta1.PerpetualMarketFundingState.deserializeBinaryFromReader);
      msg.addPerpetualMarketFundingState(value);
      break;
    case 12:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeMarketSettlementInfo;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeMarketSettlementInfo.deserializeBinaryFromReader);
      msg.addDerivativeMarketSettlementScheduled(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSpotExchangeEnabled(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDerivativesExchangeEnabled(value);
      break;
    case 15:
      var value = new proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints;
      reader.readMessage(value,proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.deserializeBinaryFromReader);
      msg.addLiquidityMiningAccountPoints(value);
      break;
    case 16:
      var value = new injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign.deserializeBinaryFromReader);
      msg.setCurrentLiquidityMiningCampaign(value);
      break;
    case 17:
      var value = new injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign.deserializeBinaryFromReader);
      msg.setUpcomingLiquidityMiningCampaign(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.GenesisState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.GenesisState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.GenesisState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      injective_exchange_v1beta1_exchange_pb.Params.serializeBinaryToWriter
    );
  }
  f = message.getSpotMarketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.SpotMarket.serializeBinaryToWriter
    );
  }
  f = message.getDerivativeMarketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeMarket.serializeBinaryToWriter
    );
  }
  f = message.getSpotOrderbookList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.injective.exchange.v1beta1.SpotOrderBook.serializeBinaryToWriter
    );
  }
  f = message.getDerivativeOrderbookList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.injective.exchange.v1beta1.DerivativeOrderBook.serializeBinaryToWriter
    );
  }
  f = message.getBalancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.injective.exchange.v1beta1.Balance.serializeBinaryToWriter
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.injective.exchange.v1beta1.DerivativePosition.serializeBinaryToWriter
    );
  }
  f = message.getSubaccountTradeNoncesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.injective.exchange.v1beta1.SubaccountNonce.serializeBinaryToWriter
    );
  }
  f = message.getExpiryFuturesMarketInfoStateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.serializeBinaryToWriter
    );
  }
  f = message.getPerpetualMarketInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      injective_exchange_v1beta1_exchange_pb.PerpetualMarketInfo.serializeBinaryToWriter
    );
  }
  f = message.getPerpetualMarketFundingStateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.injective.exchange.v1beta1.PerpetualMarketFundingState.serializeBinaryToWriter
    );
  }
  f = message.getDerivativeMarketSettlementScheduledList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeMarketSettlementInfo.serializeBinaryToWriter
    );
  }
  f = message.getIsSpotExchangeEnabled();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsDerivativesExchangeEnabled();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getLiquidityMiningAccountPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.serializeBinaryToWriter
    );
  }
  f = message.getCurrentLiquidityMiningCampaign();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign.serializeBinaryToWriter
    );
  }
  f = message.getUpcomingLiquidityMiningCampaign();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.injective.exchange.v1beta1.Params}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getParams = function() {
  return /** @type{?proto.injective.exchange.v1beta1.Params} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.Params, 1));
};


/**
 * @param {?proto.injective.exchange.v1beta1.Params|undefined} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated SpotMarket spot_markets = 2;
 * @return {!Array<!proto.injective.exchange.v1beta1.SpotMarket>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getSpotMarketsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SpotMarket>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.SpotMarket, 2));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SpotMarket>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setSpotMarketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SpotMarket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SpotMarket}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addSpotMarkets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective.exchange.v1beta1.SpotMarket, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearSpotMarketsList = function() {
  return this.setSpotMarketsList([]);
};


/**
 * repeated DerivativeMarket derivative_markets = 3;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeMarket>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getDerivativeMarketsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeMarket>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeMarket, 3));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeMarket>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setDerivativeMarketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarket=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarket}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addDerivativeMarkets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.exchange.v1beta1.DerivativeMarket, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearDerivativeMarketsList = function() {
  return this.setDerivativeMarketsList([]);
};


/**
 * repeated SpotOrderBook spot_orderbook = 4;
 * @return {!Array<!proto.injective.exchange.v1beta1.SpotOrderBook>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getSpotOrderbookList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SpotOrderBook>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.SpotOrderBook, 4));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SpotOrderBook>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setSpotOrderbookList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SpotOrderBook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SpotOrderBook}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addSpotOrderbook = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.injective.exchange.v1beta1.SpotOrderBook, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearSpotOrderbookList = function() {
  return this.setSpotOrderbookList([]);
};


/**
 * repeated DerivativeOrderBook derivative_orderbook = 5;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeOrderBook>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getDerivativeOrderbookList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeOrderBook>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.DerivativeOrderBook, 5));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeOrderBook>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setDerivativeOrderbookList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeOrderBook=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrderBook}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addDerivativeOrderbook = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.injective.exchange.v1beta1.DerivativeOrderBook, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearDerivativeOrderbookList = function() {
  return this.setDerivativeOrderbookList([]);
};


/**
 * repeated Balance balances = 6;
 * @return {!Array<!proto.injective.exchange.v1beta1.Balance>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getBalancesList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.Balance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.Balance, 6));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.Balance>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setBalancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.Balance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.Balance}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addBalances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.injective.exchange.v1beta1.Balance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearBalancesList = function() {
  return this.setBalancesList([]);
};


/**
 * repeated DerivativePosition positions = 7;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativePosition>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativePosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.DerivativePosition, 7));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativePosition>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativePosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativePosition}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.injective.exchange.v1beta1.DerivativePosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};


/**
 * repeated SubaccountNonce subaccount_trade_nonces = 8;
 * @return {!Array<!proto.injective.exchange.v1beta1.SubaccountNonce>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getSubaccountTradeNoncesList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SubaccountNonce>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.SubaccountNonce, 8));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SubaccountNonce>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setSubaccountTradeNoncesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SubaccountNonce=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SubaccountNonce}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addSubaccountTradeNonces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.injective.exchange.v1beta1.SubaccountNonce, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearSubaccountTradeNoncesList = function() {
  return this.setSubaccountTradeNoncesList([]);
};


/**
 * repeated ExpiryFuturesMarketInfoState expiry_futures_market_info_state = 9;
 * @return {!Array<!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getExpiryFuturesMarketInfoStateList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState, 9));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setExpiryFuturesMarketInfoStateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addExpiryFuturesMarketInfoState = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearExpiryFuturesMarketInfoStateList = function() {
  return this.setExpiryFuturesMarketInfoStateList([]);
};


/**
 * repeated PerpetualMarketInfo perpetual_market_info = 10;
 * @return {!Array<!proto.injective.exchange.v1beta1.PerpetualMarketInfo>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getPerpetualMarketInfoList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.PerpetualMarketInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.PerpetualMarketInfo, 10));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.PerpetualMarketInfo>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setPerpetualMarketInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketInfo}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addPerpetualMarketInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.injective.exchange.v1beta1.PerpetualMarketInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearPerpetualMarketInfoList = function() {
  return this.setPerpetualMarketInfoList([]);
};


/**
 * repeated PerpetualMarketFundingState perpetual_market_funding_state = 11;
 * @return {!Array<!proto.injective.exchange.v1beta1.PerpetualMarketFundingState>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getPerpetualMarketFundingStateList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.PerpetualMarketFundingState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.PerpetualMarketFundingState, 11));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.PerpetualMarketFundingState>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setPerpetualMarketFundingStateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addPerpetualMarketFundingState = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.injective.exchange.v1beta1.PerpetualMarketFundingState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearPerpetualMarketFundingStateList = function() {
  return this.setPerpetualMarketFundingStateList([]);
};


/**
 * repeated DerivativeMarketSettlementInfo derivative_market_settlement_scheduled = 12;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeMarketSettlementInfo>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getDerivativeMarketSettlementScheduledList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeMarketSettlementInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeMarketSettlementInfo, 12));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeMarketSettlementInfo>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setDerivativeMarketSettlementScheduledList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketSettlementInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketSettlementInfo}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addDerivativeMarketSettlementScheduled = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.injective.exchange.v1beta1.DerivativeMarketSettlementInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearDerivativeMarketSettlementScheduledList = function() {
  return this.setDerivativeMarketSettlementScheduledList([]);
};


/**
 * optional bool is_spot_exchange_enabled = 13;
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getIsSpotExchangeEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.setIsSpotExchangeEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_derivatives_exchange_enabled = 14;
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getIsDerivativesExchangeEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.setIsDerivativesExchangeEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * repeated LiquidityMiningAccountPoints liquidity_mining_account_points = 15;
 * @return {!Array<!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints>}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getLiquidityMiningAccountPointsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints, 15));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints>} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setLiquidityMiningAccountPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.addLiquidityMiningAccountPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearLiquidityMiningAccountPointsList = function() {
  return this.setLiquidityMiningAccountPointsList([]);
};


/**
 * optional LiquidityMiningCampaign current_liquidity_mining_campaign = 16;
 * @return {?proto.injective.exchange.v1beta1.LiquidityMiningCampaign}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getCurrentLiquidityMiningCampaign = function() {
  return /** @type{?proto.injective.exchange.v1beta1.LiquidityMiningCampaign} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign, 16));
};


/**
 * @param {?proto.injective.exchange.v1beta1.LiquidityMiningCampaign|undefined} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setCurrentLiquidityMiningCampaign = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearCurrentLiquidityMiningCampaign = function() {
  return this.setCurrentLiquidityMiningCampaign(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.hasCurrentLiquidityMiningCampaign = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional LiquidityMiningCampaign upcoming_liquidity_mining_campaign = 17;
 * @return {?proto.injective.exchange.v1beta1.LiquidityMiningCampaign}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.getUpcomingLiquidityMiningCampaign = function() {
  return /** @type{?proto.injective.exchange.v1beta1.LiquidityMiningCampaign} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.LiquidityMiningCampaign, 17));
};


/**
 * @param {?proto.injective.exchange.v1beta1.LiquidityMiningCampaign|undefined} value
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
*/
proto.injective.exchange.v1beta1.GenesisState.prototype.setUpcomingLiquidityMiningCampaign = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.GenesisState} returns this
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.clearUpcomingLiquidityMiningCampaign = function() {
  return this.setUpcomingLiquidityMiningCampaign(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.GenesisState.prototype.hasUpcomingLiquidityMiningCampaign = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.SpotOrderBook.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.SpotOrderBook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.SpotOrderBook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotOrderBook.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isbuyside: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    injective_exchange_v1beta1_exchange_pb.SpotLimitOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.SpotOrderBook}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.SpotOrderBook;
  return proto.injective.exchange.v1beta1.SpotOrderBook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.SpotOrderBook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.SpotOrderBook}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbuyside(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.SpotLimitOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.SpotLimitOrder.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.SpotOrderBook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.SpotOrderBook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotOrderBook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsbuyside();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.SpotLimitOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotOrderBook} returns this
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isBuySide = 2;
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.getIsbuyside = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective.exchange.v1beta1.SpotOrderBook} returns this
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.setIsbuyside = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated SpotLimitOrder orders = 3;
 * @return {!Array<!proto.injective.exchange.v1beta1.SpotLimitOrder>}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SpotLimitOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.SpotLimitOrder, 3));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SpotLimitOrder>} value
 * @return {!proto.injective.exchange.v1beta1.SpotOrderBook} returns this
*/
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SpotLimitOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SpotLimitOrder}
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.exchange.v1beta1.SpotLimitOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.SpotOrderBook} returns this
 */
proto.injective.exchange.v1beta1.SpotOrderBook.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.DerivativeOrderBook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.DerivativeOrderBook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isbuyside: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    injective_exchange_v1beta1_exchange_pb.DerivativeLimitOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrderBook}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.DerivativeOrderBook;
  return proto.injective.exchange.v1beta1.DerivativeOrderBook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.DerivativeOrderBook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrderBook}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbuyside(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeLimitOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeLimitOrder.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.DerivativeOrderBook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.DerivativeOrderBook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsbuyside();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeLimitOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrderBook} returns this
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isBuySide = 2;
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.getIsbuyside = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrderBook} returns this
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.setIsbuyside = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated DerivativeLimitOrder orders = 3;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeLimitOrder>}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeLimitOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeLimitOrder, 3));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeLimitOrder>} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrderBook} returns this
*/
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeLimitOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeLimitOrder}
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.exchange.v1beta1.DerivativeLimitOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrderBook} returns this
 */
proto.injective.exchange.v1beta1.DerivativeOrderBook.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.Balance.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.Balance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.Balance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.Balance.toObject = function(includeInstance, msg) {
  var f, obj = {
    subaccountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    denom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deposits: (f = msg.getDeposits()) && injective_exchange_v1beta1_exchange_pb.Deposit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.Balance}
 */
proto.injective.exchange.v1beta1.Balance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.Balance;
  return proto.injective.exchange.v1beta1.Balance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.Balance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.Balance}
 */
proto.injective.exchange.v1beta1.Balance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.Deposit;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.Deposit.deserializeBinaryFromReader);
      msg.setDeposits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.Balance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.Balance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.Balance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.Balance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeposits();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.Deposit.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subaccount_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.Balance.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.Balance} returns this
 */
proto.injective.exchange.v1beta1.Balance.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string denom = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.Balance.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.Balance} returns this
 */
proto.injective.exchange.v1beta1.Balance.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Deposit deposits = 3;
 * @return {?proto.injective.exchange.v1beta1.Deposit}
 */
proto.injective.exchange.v1beta1.Balance.prototype.getDeposits = function() {
  return /** @type{?proto.injective.exchange.v1beta1.Deposit} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.Deposit, 3));
};


/**
 * @param {?proto.injective.exchange.v1beta1.Deposit|undefined} value
 * @return {!proto.injective.exchange.v1beta1.Balance} returns this
*/
proto.injective.exchange.v1beta1.Balance.prototype.setDeposits = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.Balance} returns this
 */
proto.injective.exchange.v1beta1.Balance.prototype.clearDeposits = function() {
  return this.setDeposits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.Balance.prototype.hasDeposits = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.DerivativePosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.DerivativePosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativePosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    subaccountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    position: (f = msg.getPosition()) && injective_exchange_v1beta1_exchange_pb.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.DerivativePosition}
 */
proto.injective.exchange.v1beta1.DerivativePosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.DerivativePosition;
  return proto.injective.exchange.v1beta1.DerivativePosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.DerivativePosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.DerivativePosition}
 */
proto.injective.exchange.v1beta1.DerivativePosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.Position;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.DerivativePosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.DerivativePosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativePosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subaccount_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativePosition} returns this
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativePosition} returns this
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Position position = 3;
 * @return {?proto.injective.exchange.v1beta1.Position}
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.getPosition = function() {
  return /** @type{?proto.injective.exchange.v1beta1.Position} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.Position, 3));
};


/**
 * @param {?proto.injective.exchange.v1beta1.Position|undefined} value
 * @return {!proto.injective.exchange.v1beta1.DerivativePosition} returns this
*/
proto.injective.exchange.v1beta1.DerivativePosition.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.DerivativePosition} returns this
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.DerivativePosition.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.SubaccountNonce.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.SubaccountNonce} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SubaccountNonce.toObject = function(includeInstance, msg) {
  var f, obj = {
    subaccountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subaccountTradeNonce: (f = msg.getSubaccountTradeNonce()) && injective_exchange_v1beta1_exchange_pb.SubaccountTradeNonce.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.SubaccountNonce}
 */
proto.injective.exchange.v1beta1.SubaccountNonce.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.SubaccountNonce;
  return proto.injective.exchange.v1beta1.SubaccountNonce.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.SubaccountNonce} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.SubaccountNonce}
 */
proto.injective.exchange.v1beta1.SubaccountNonce.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.SubaccountTradeNonce;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.SubaccountTradeNonce.deserializeBinaryFromReader);
      msg.setSubaccountTradeNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.SubaccountNonce.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.SubaccountNonce} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SubaccountNonce.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubaccountTradeNonce();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.SubaccountTradeNonce.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subaccount_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SubaccountNonce} returns this
 */
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SubaccountTradeNonce subaccount_trade_nonce = 2;
 * @return {?proto.injective.exchange.v1beta1.SubaccountTradeNonce}
 */
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.getSubaccountTradeNonce = function() {
  return /** @type{?proto.injective.exchange.v1beta1.SubaccountTradeNonce} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.SubaccountTradeNonce, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.SubaccountTradeNonce|undefined} value
 * @return {!proto.injective.exchange.v1beta1.SubaccountNonce} returns this
*/
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.setSubaccountTradeNonce = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.SubaccountNonce} returns this
 */
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.clearSubaccountTradeNonce = function() {
  return this.setSubaccountTradeNonce(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.SubaccountNonce.prototype.hasSubaccountTradeNonce = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketInfo: (f = msg.getMarketInfo()) && injective_exchange_v1beta1_exchange_pb.ExpiryFuturesMarketInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState;
  return proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.ExpiryFuturesMarketInfo;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.ExpiryFuturesMarketInfo.deserializeBinaryFromReader);
      msg.setMarketInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.ExpiryFuturesMarketInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ExpiryFuturesMarketInfo market_info = 2;
 * @return {?proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfo}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.getMarketInfo = function() {
  return /** @type{?proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfo} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.ExpiryFuturesMarketInfo, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfo|undefined} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState} returns this
*/
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.setMarketInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.clearMarketInfo = function() {
  return this.setMarketInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketInfoState.prototype.hasMarketInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.PerpetualMarketFundingState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    funding: (f = msg.getFunding()) && injective_exchange_v1beta1_exchange_pb.PerpetualMarketFunding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState}
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.PerpetualMarketFundingState;
  return proto.injective.exchange.v1beta1.PerpetualMarketFundingState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState}
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.PerpetualMarketFunding;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.PerpetualMarketFunding.deserializeBinaryFromReader);
      msg.setFunding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.PerpetualMarketFundingState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFunding();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.PerpetualMarketFunding.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PerpetualMarketFunding funding = 2;
 * @return {?proto.injective.exchange.v1beta1.PerpetualMarketFunding}
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.getFunding = function() {
  return /** @type{?proto.injective.exchange.v1beta1.PerpetualMarketFunding} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.PerpetualMarketFunding, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.PerpetualMarketFunding|undefined} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState} returns this
*/
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.setFunding = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketFundingState} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.clearFunding = function() {
  return this.setFunding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.PerpetualMarketFundingState.prototype.hasFunding = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    points: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints}
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints;
  return proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints}
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPoints();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints} returns this
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string points = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.prototype.getPoints = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints} returns this
 */
proto.injective.exchange.v1beta1.LiquidityMiningAccountPoints.prototype.setPoints = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.injective.exchange.v1beta1);
